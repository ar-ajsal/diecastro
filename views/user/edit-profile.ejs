<%- include("../../views/partials/user/header") %>

    <title>Diecastro - Account Settings</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600&display=swap" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
    <!-- SweetAlert2 CSS -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">

    <style>
        :root {
            --primary-bg: #f5f5f5;
            --secondary-bg: #ffffff;
            --text-primary: #333333;
            --text-secondary: #666666;
            --border-color: #e0e0e0;
        }

        body {
            background-color: var(--primary-bg);
            color: var(--text-primary);
            font-family: 'Inter', sans-serif;
            margin: 0;
            overflow-x: hidden;
        }

        /* Horizontal Navigation */
        .navbar {
            background-color: var(--secondary-bg);
            border-bottom: 1px solid var(--border-color);
            padding: 1rem 2rem;
            position: sticky;
            top: 0;
            z-index: 1000;
        }

        .navbar-brand {
            font-size: 1.5rem;
            font-weight: 600;
            color: var(--text-primary);
        }

        .navbar a {
            color: var(--text-primary);
            text-decoration: none;
            padding: 0.5rem 1rem;
            font-size: 1rem;
            transition: background-color 0.2s ease;
        }

        .navbar a:hover,
        .navbar .active {
            background-color: var(--border-color);
            border-radius: 6px;
        }

        /* Profile Container */
        .profile-container {
            padding: 2rem;
            background: var(--secondary-bg);
            border-radius: 8px;
            margin: 1rem;
            border: 1px solid var(--border-color);
        }

        /* Profile Image */
        .profile-image-container {
            position: relative;
            width: 120px;
            height: 120px;
            margin-bottom: 1.5rem;
        }

        .profile-image {
            width: 100%;
            height: 100%;
            border-radius: 50%;
            object-fit: cover;
            border: 2px solid var(--border-color);
        }

        .camera-button {
            position: absolute;
            bottom: 5px;
            right: 5px;
            background: var(--text-primary);
            color: var(--secondary-bg);
            border-radius: 50%;
            width: 30px;
            height: 30px;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            transition: background-color 0.2s ease;
        }

        .camera-button:hover {
            background: #555555;
        }

        /* Form Styling */
        .form-row {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 1rem;
        }

        .form-group {
            margin-bottom: 1rem;
        }

        .form-group label {
            display: block;
            margin-bottom: 0.25rem;
            font-weight: 500;
            color: var(--text-primary);
        }

        .form-group input,
        .form-group select {
            width: 100%;
            padding: 0.5rem;
            border: 1px solid var(--border-color);
            border-radius: 4px;
            color: var(--text-primary);
            background: var(--primary-bg);
            font-size: 0.9rem;
        }

        .form-group input:focus,
        .form-group select:focus {
            outline: none;
            border-color: var(--text-primary);
        }

        /* Buttons */
        .button-group {
            display: flex;
            gap: 0.5rem;
            margin-top: 1.5rem;
        }

        .btn-primary {
            background: var(--text-primary);
            color: var(--secondary-bg);
            padding: 0.5rem 1rem;
            border: none;
            border-radius: 6px;
            font-weight: 600;
            transition: background-color 0.2s ease;
        }

        .btn-primary:hover {
            background: #555555;
        }

        .btn-secondary {
            background: var(--primary-bg);
            color: var(--text-primary);
            padding: 0.5rem 1rem;
            border: 1px solid var(--border-color);
            border-radius: 6px;
            font-weight: 600;
            transition: background-color 0.2s ease;
        }

        .btn-secondary:hover {
            background: var(--border-color);
        }

        /* Cropper Modal */
        #cropModal .modal-dialog {
            max-width: 600px;
        }

        .img-container {
            width: 100%;
            height: 300px;
            margin: 0 auto;
            border: 1px solid var(--border-color);
            border-radius: 4px;
            background: var(--primary-bg);
            overflow: hidden;
        }

        .img-container img {
            max-width: 100%;
            max-height: 100%;
            object-fit: contain;
        }

        .modal-content {
            background: var(--secondary-bg);
            border: 1px solid var(--border-color);
            border-radius: 8px;
        }

        .modal-header {
            background: var(--secondary-bg);
            border-bottom: 1px solid var(--border-color);
            padding: 1rem;
        }

        .modal-title {
            font-size: 1.25rem;
            font-weight: 600;
            color: var(--text-primary);
        }

        .modal-body {
            padding: 1rem;
        }

        .modal-footer {
            border-top: 1px solid var(--border-color);
            padding: 1rem;
        }

        .btn-close {
            color: var(--text-primary);
            opacity: 0.7;
        }

        .btn-close:hover {
            opacity: 1;
        }

        /* Responsive Adjustments */
        @media (max-width: 768px) {
            .form-row {
                grid-template-columns: 1fr;
            }

            .profile-container {
                padding: 1.5rem;
            }

            .navbar {
                padding: 1rem;
            }

            #cropModal .modal-dialog {
                max-width: 90%;
            }

            .img-container {
                height: 200px;
            }
        }

        p {
            font-family: 'Inter', sans-serif;
            font-weight: 400;
            font-size: 0.9rem;
            line-height: 1.6;
            color: var(--text-secondary);
            margin: 0 0 0.5rem 0;
        }
    </style>

    <body>
        <!-- Breadcrumb Section -->
        <div class="breadcrumb-section py-4" style="background: var(--secondary-bg); border-bottom: 1px solid var(--border-color);">
            <div class="container">
                <div class="row">
                    <div class="col-lg-8 offset-lg-2 text-center">
                        <div class="breadcrumb-text">
                            <p>Buy a car</p>
                            <h1>Account Settings</h1>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Horizontal Navigation -->
        <nav class="navbar">
            <div class="container-fluid">
                <a class="navbar-brand" href="#">Diecastro</a>
                <div class="d-flex flex-wrap">
                    <a href="/userProfile"><i class="fas fa-user"></i> Dashboard</a>
                    <a href="/orders"><i class="fas fa-history"></i> Order History</a>
                    <a href="/address"><i class="fas fa-map-marker-alt"></i> Address Book</a>
                    <a href="/editProfile" class="active"><i class="fas fa-cog"></i> Account Settings</a>
                    <a href="/wallet"><i class="fa-solid fa-wallet"></i> Wallet</a>
                    <a href="/coupons"><i class="fa-duotone fa-solid fa-ticket"></i> Coupons</a>
                    <a href="#" onclick="confirmAdminLogout(event)"><i class="fas fa-sign-out-alt"></i> Logout</a>
                </div>
            </div>
        </nav>

        <!-- Main Content -->
        <main class="container py-4">
            <form method="POST" action="/editProfile" enctype="multipart/form-data">
                <div class="profile-container">
                    <div class="form-row">
                        <div class="profile-image-container">
                            <input type="file" id="fileInput" name="image" accept="image/*" style="display: none;">
                            <img src="<%= user.image && user.image.length ? user.image[0] : 'assets/img/default dp.jpg' %>" alt="User Profile" class="profile-image" id="profileImage">
                            <button type="button" class="camera-button" onclick="document.getElementById('fileInput').click()">
                                <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" width="16" height="16">
                                    <path d="M23 19a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h4l2-3h6l2 3h4a2 2 0 0 1 2 2z" />
                                    <circle cx="12" cy="13" r="4" />
                                </svg>
                            </button>
                        </div>

                        <!-- <div class="form-group">
                            <label for="firstName">First Name</label>
                            <input type="text" id="firstName" name="firstName" value="<%= user.firstName %>" required minlength="2" maxlength="30">
                        </div>

                        <div class="form-group">
                            <label for="lastName">Last Name</label>
                            <input type="text" id="lastName" name="lastName" value="<%= user.secondName %>" required minlength="2" maxlength="30">
                        </div> -->

                        <div class="form-group">
                            <label for="username">Username</label>
                            <input type="text" id="username" name="username" value="<%= user.name %>" required minlength="3" maxlength="30">
                        </div>

                        <div class="form-group">
                            <label for="phone">Phone</label>
                            <input type="tel" id="phone" name="phone" value="<%= user.phone %>" required pattern="[0-9]{10}" title="10-digit phone number">
                        </div>

                        <div class="form-group">
                            <label for="email">Email</label>
                            <input type="email" id="email" name="email" value="<%= user.email %>" readonly>
                        </div>

                        <div class="form-group">
                            <label for="gender">Gender</label>
                            <select id="gender" name="gender" required>
                                <option value="male" <%= user.gender === 'male' ? 'selected' : '' %>>Male</option>
                                <option value="female" <%= user.gender === 'female' ? 'selected' : '' %>>Female</option>
                                <option value="other" <%= user.gender === 'other' ? 'selected' : '' %>>Other</option>
                            </select>
                        </div>
                    </div>

                    <div class="button-group">
                        <button type="submit" class="btn-primary">Save Changes</button>
                        <a href="/change-email" class="btn-secondary">Change Email</a>
                        <% if (user.password) { %>
                            <a href="/change-password" class="btn-secondary">Change Password</a>
                        <% } %>
                    </div>
                </div>
            </form>
        </main>

        <!-- Cropper Modal -->
        <div class="modal fade" id="cropModal" tabindex="-1">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">Crop Image</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                    </div>
                    <div class="modal-body">
                        <div class="img-container">
                            <img id="imageToCrop" src="">
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="button" class="btn btn-primary" id="cropButton">Crop & Save</button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Toast Notification -->
        <div id="toast" class="toast">
            <span id="toast-message"></span>
        </div>

        <%- include("../../views/partials/user/footer") %>

        <!-- Scripts -->
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
        <script>
            let cropper;
            const fileInput = document.getElementById('fileInput');
            const profileImage = document.getElementById('profileImage');
            const imageToCrop = document.getElementById('imageToCrop');
            const cropButton = document.getElementById('cropButton');

            fileInput.addEventListener('change', function(e) {
                const file = e.target.files[0];
                if (file) {
                    const reader = new FileReader();
                    reader.onload = function(e) {
                        imageToCrop.src = e.target.result;
                        if (cropper) {
                            cropper.destroy();
                        }
                        cropper = new Cropper(imageToCrop, {
                            aspectRatio: 1,
                            viewMode: 1,
                            autoCropArea: 0.8,
                            responsive: true,
                            cropBoxResizable: true,
                            cropBoxMovable: true,
                        });
                        const modal = new bootstrap.Modal(document.getElementById('cropModal'));
                        modal.show();
                    };
                    reader.readAsDataURL(file);
                }
            });

            cropButton.addEventListener('click', function() {
                if (cropper) {
                    cropper.getCroppedCanvas({
                        width: 120,
                        height: 120,
                    }).toBlob(function(blob) {
                        const url = URL.createObjectURL(blob);
                        profileImage.src = url;
                        const file = new File([blob], 'profile.jpg', { type: 'image/jpeg' });
                        const dataTransfer = new DataTransfer();
                        dataTransfer.items.add(file);
                        fileInput.files = dataTransfer.files;
                        const modal = bootstrap.Modal.getInstance(document.getElementById('cropModal'));
                        modal.hide();
                    }, 'image/jpeg');
                }
            });

            document.getElementById('cropModal').addEventListener('hidden.bs.modal', function() {
                if (cropper) {
                    cropper.destroy();
                    cropper = null;
                }
            });

            document.querySelector('form').addEventListener('submit', function(e) {
                e.preventDefault();
                const phoneRegex = /^[0-9]{10}$/;
                const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
                const phone = document.getElementById('phone').value;
                const email = document.getElementById('email').value;

                if (!phoneRegex.test(phone)) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Invalid Phone Number',
                        text: 'Please enter a valid 10-digit phone number',
                    });
                    return;
                }

                if (!emailRegex.test(email)) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Invalid Email',
                        text: 'Please enter a valid email address',
                    });
                    return;
                }

                Swal.fire({
                    title: "Are you sure?",
                    text: "Do you want to save the changes?",
                    icon: "warning",
                    showCancelButton: true,
                    confirmButtonColor: "#3085d6",
                    cancelButtonColor: "#d33",
                    confirmButtonText: "Yes, save it!"
                }).then((result) => {
                    if (result.isConfirmed) {
                        const formData = new FormData(this);
                        fetch('/editProfile', {
                            method: 'POST',
                            body: formData
                        })
                        .then(response => response.json())
                        .then(data => {
                            if (data.success) {
                                Swal.fire({
                                    icon: 'success',
                                    title: 'Saved!',
                                    text: 'Your profile has been updated successfully.',
                                    timer: 1500
                                }).then(() => location.reload());
                            } else {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Error!',
                                    text: data.message || 'Something went wrong. Please try again.'
                                });
                            }
                        })
                        .catch(() => {
                            Swal.fire({
                                icon: 'error',
                                title: 'Error!',
                                text: 'Could not connect to the server. Try again later.'
                            });
                        });
                    }
                });
            });

            function confirmAdminLogout(event) {
                event.preventDefault();
                Swal.fire({
                    title: "Are you sure?",
                    text: "You will be logged out!",
                    icon: "warning",
                    showCancelButton: true,
                    confirmButtonColor: "#3085d6",
                    cancelButtonColor: "#d33",
                    confirmButtonText: "Yes, Logout"
                }).then((result) => {
                    if (result.isConfirmed) {
                        window.location.href = "/logout";
                    }
                });
            }
        </script>
    </body>