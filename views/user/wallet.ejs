<%- include("../../views/partials/user/header") %>

    <title>Diecastro - Wallet</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600&display=swap" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
    <!-- SweetAlert2 CSS -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">

    <style>
        :root {
            --primary-bg: #f5f5f5;
            --secondary-bg: #ffffff;
            --text-primary: #333333;
            --text-secondary: #666666;
            --border-color: #e0e0e0;
        }

        body {
            background-color: var(--primary-bg);
            color: var(--text-primary);
            font-family: 'Inter', sans-serif;
            margin: 0;
            overflow-x: hidden;
        }

        /* Horizontal Navigation */
        .navbar {
            background-color: var(--secondary-bg);
            border-bottom: 1px solid var(--border-color);
            padding: 1rem 2rem;
            position: sticky;
            top: 0;
            z-index: 1000;
        }

        .navbar-brand {
            font-size: 1.5rem;
            font-weight: 600;
            color: var(--text-primary);
        }

        .navbar a {
            color: var(--text-primary);
            text-decoration: none;
            padding: 0.5rem 1rem;
            font-size: 1rem;
            transition: background-color 0.2s ease;
        }

        .navbar a:hover,
        .navbar .active {
            background-color: var(--border-color);
            border-radius: 6px;
        }

        /* Main Content */
        .main-content {
            padding: 2rem;
            background: var(--secondary-bg);
            border-radius: 8px;
            margin: 1rem;
            border: 1px solid var(--border-color);
        }

        .main-content h1 {
            font-size: 1.75rem;
            font-weight: 600;
            margin-bottom: 1.5rem;
        }

        /* Wallet Container */
        .profile-container {
            padding: 1.5rem;
        }

        /* Stats Card */
        .stats-card {
            background: var(--secondary-bg);
            border: 1px solid var(--border-color);
            border-radius: 8px;
            padding: 1rem;
            text-align: center;
        }

        .stats-card h5 {
            font-size: 1.5rem;
            font-weight: 600;
            margin-bottom: 0.5rem;
        }

        .stats-card p {
            color: var(--text-secondary);
            margin: 0;
            font-size: 0.9rem;
        }

        /* Buttons */
        .btn-primary {
            background: var(--text-primary);
            color: var(--secondary-bg);
            padding: 0.5rem 1rem;
            border: none;
            border-radius: 6px;
            font-weight: 600;
            transition: background-color 0.2s ease;
        }

        .btn-primary:hover {
            background: #555555;
        }

        /* Transaction Card */
        .transaction-card {
            background: var(--secondary-bg);
            border: 1px solid var(--border-color);
            border-radius: 8px;
            padding: 1rem;
            margin-bottom: 1rem;
        }

        .transaction-status {
            padding: 0.25rem 0.5rem;
            border-radius: 4px;
            font-size: 0.85rem;
            font-weight: 600;
        }

        .status-credit {
            background: #28a745;
            color: var(--secondary-bg);
        }

        .status-debit {
            background: #dc3545;
            color: var(--secondary-bg);
        }

        /* Input */
        input[type="number"],
        input[type="text"] {
            border: 1px solid var(--border-color);
            border-radius: 6px;
            padding: 0.5rem;
            color: var(--text-primary);
            background: var(--primary-bg);
            width: 150px;
        }

        /* Coupon Section */
        .coupon-section {
            margin-top: 1rem;
        }

        .coupon-section .input-group {
            display: flex;
            gap: 0.5rem;
            align-items: center;
        }

        .coupon-section .btn-primary {
            background: #007bff;
        }

        .coupon-section .btn-primary:hover {
            background: #0056b3;
        }

        .coupon-section a {
            color: #007bff;
            text-decoration: none;
            font-size: 0.9rem;
        }

        .coupon-section a:hover {
            text-decoration: underline;
        }

        #appliedCoupon {
            margin-top: 1rem;
        }

        #appliedCoupon .btn-danger {
            background: #dc3545;
            border: none;
            padding: 0.25rem 0.5rem;
            font-size: 0.85rem;
        }

        #appliedCoupon .btn-danger:hover {
            background: #c82333;
        }

        /* Pagination */
        .pagination-controls a {
            background: var(--text-primary);
            color: var(--secondary-bg);
            padding: 0.5rem 1rem;
            border-radius: 6px;
            text-decoration: none;
            margin: 0 0.5rem;
            transition: background-color 0.2s ease;
        }

        .pagination-controls a:hover {
            background: #555555;
        }

        .pagination-controls span {
            color: var(--text-primary);
            font-size: 0.9rem;
        }

        /* Responsive Adjustments */
        @media (max-width: 768px) {
            .main-content {
                margin: 0.5rem;
                padding: 1.5rem;
            }

            .navbar {
                padding: 1rem;
            }

            .wallet-actions {
                flex-direction: column;
                gap: 1rem;
            }

            input[type="number"],
            input[type="text"] {
                width: 100%;
            }

            .btn-primary {
                width: 100%;
            }

            .coupon-section .input-group {
                flex-direction: column;
            }
        }

        p {
            font-family: 'Inter', sans-serif;
            font-weight: 400;
            font-size: 0.9rem;
            line-height: 1.6;
            color: var(--text-secondary);
            margin: 0 0 0.5rem 0;
        }
    </style>

    <body>
        <!-- Breadcrumb Section -->
        <div class="breadcrumb-section py-4"
            style="background: var(--secondary-bg); border-bottom: 1px solid var(--border-color);">
            <div class="container">
                <div class="row">
                    <div class="col-lg-8 offset-lg-2 text-center">
                        <div class="breadcrumb-text">
                            <p>Manage your funds</p>
                            <h1>Wallet</h1>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Horizontal Navigation -->
        <nav class="navbar">
            <div class="container-fluid">
                <a class="navbar-brand" href="#">Diecastro</a>
                <div class="d-flex flex-wrap">
                    <a href="/userProfile"><i class="fas fa-user"></i> Dashboard</a>
                    <a href="/orders"><i class="fas fa-history"></i> Order History</a>
                    <a href="/address"><i class="fas fa-map-marker-alt"></i> Address Book</a>
                    <a href="/editProfile"><i class="fas fa-cog"></i> Account Settings</a>
                    <a href="/wallet" class="active"><i class="fa-solid fa-wallet"></i> Wallet</a>
                    <a href="/coupons"><i class="fa-duotone fa-solid fa-ticket"></i> Coupons</a>
                    <a href="#" onclick="confirmAdminLogout(event)"><i class="fas fa-sign-out-alt"></i> Logout</a>
                </div>
            </div>
        </nav>

        <!-- Main Content -->
        <main class="main-content">
            <div class="profile-container">
                <h1>Your Wallet</h1>
                <div class="row g-3 mb-4">
                    <div class="col-md-12">
                        <div class="stats-card">
                            <h5 id="currentBalance">₹<%= wallet.balance ? wallet.balance.toFixed(2) : '0.00' %>
                            </h5>
                            <p style="color: green;"> Current Balance</p>
                        </div>
                    </div>
                    <!-- <div class="col-md-4">
                    <div class="stats-card">
                        <h5>₹<%= wallet.balance ? wallet.balance.toFixed(2) : '0.00' %></h5>
                        <p>Current Balance</p>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="stats-card">
                        <h5 class="text-danger">₹<%= wallet.totalDebit ? wallet.totalDebit.toFixed(2) : '0.00' %></h5>
                        <p>Total Debit <i class="fas fa-arrow-down"></i></p>
                    </div>
                </div> -->
                </div>
                <div class="mt-4 text-center wallet-actions d-flex justify-content-center gap-2 flex-wrap">
                    <div>
                        <input type="number" id="amount" placeholder="Enter Amount" min="1" max="100000">

                    </div>
                    <button class="btn-primary" onclick="topup()">Add Funds</button>
                </div>


                
                <div class="mt-4">
                    <h3 class="mb-3">Recent Transactions</h3>
                    <% if (wallet.transactions && wallet.transactions.length> 0) { %>
                        <% wallet.transactions.sort((a, b)=> new Date(b.date) - new Date(a.date)).forEach(transaction =>
                            { %>
                            <% if (transaction.type && typeof transaction.type==='string' ) { %>
                                <div class="transaction-card">
                                    <div class="d-flex justify-content-between align-items-center flex-wrap gap-2">
                                        <div class="transaction-details">
                                            <h5 class="mb-1">
                                                <%= transaction.description || 'Transaction' %>
                                            </h5>
                                            <p class="text-secondary mb-0">
                                                <%= new Date(transaction.date).toLocaleString('en-IN', {
                                                    dateStyle: 'medium' , timeStyle: 'short' }) %>
                                            </p>
                                        </div>
                                        <div class="transaction-amount text-end">
                                            <span
                                                class="transaction-status <%= transaction.type === 'credit' ? 'status-credit' : 'status-debit' %>">
                                                <%= transaction.type.charAt(0).toUpperCase() + transaction.type.slice(1)
                                                    %>
                                            </span>
                                            <h4
                                                class="mt-2 <%= transaction.type === 'credit' ? 'text-success' : 'text-danger' %>">
                                                <%= transaction.type==='credit' ? '+' : '-' %>₹<%=
                                                        transaction.amount.toFixed(2) %>
                                            </h4>
                                        </div>
                                    </div>
                                </div>
                                <% } else { %>
                                    <div class="transaction-card">
                                        <p>Invalid transaction data</p>
                                    </div>
                                    <% } %>
                                        <% }); %>
                                            <% } else { %>
                                                <div class="transaction-card">
                                                    <p>No transactions yet.</p>
                                                </div>
                                                <% } %>
                                                    <div class="pagination-controls mt-4 text-center">
                                                        <% if (currentPage> 1) { %>
                                                            <a
                                                                href="/wallet?page=<%= currentPage - 1 %>&limit=5">Previous</a>
                                                            <% } %>
                                                                <span>Page <%= currentPage %> of <%= totalPages %>
                                                                </span>
                                                                <% if (currentPage < totalPages) { %>
                                                                    <a
                                                                        href="/wallet?page=<%= currentPage + 1 %>&limit=5">Next</a>
                                                                    <% } %>
                                                    </div>
                </div>


        </main>

        <%- include("../../views/partials/user/footer") %>

            <!-- Scripts -->
            <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
            <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
            <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
            <script>


                // async function topup() {
                //     try {
                //         Swal.fire({
                //         icon: 'success',
                //         title: 'Processing Amount',
                //         text: 'Please wait while we process your request...'

                //     });

                //     const amountInput = document.getElementById("amount");
                //             let amount = parseFloat(amountInput.value);

                //             if (isNaN(amount) || amount <= 0) {
                //                 Swal.fire({
                //                     icon: 'error',
                //                     title: 'Invalid Amount',
                //                     text: 'Please enter a valid amount greater than 0'
                //                 });
                //                 return;
                //             }

                //             if (amount > 100000) {
                //                 Swal.fire({
                //                     icon: 'error',
                //                     title: 'Limit Exceeded',
                //                     text: 'Amount exceeds maximum limit of ₹1,00,000'
                //                 });
                //                 return;
                //             }

                //     } catch (error) {
                //         Swal.fire({
                //         icon: 'error',
                //         title: 'catch working ',
                //         text: error.message || 'An error occurred while processing your request.'

                //     });
                //     }



                // }


                async function topup() {
                    try {

                        const amountInput = document.getElementById("amount");
                        let amount = parseFloat(amountInput.value);

                        if (isNaN(amount) || amount <= 0) {
                            Swal.fire({
                                icon: 'error',
                                title: 'Invalid Amount',
                                text: 'Please enter a valid amount greater than 0'
                            });
                            return;
                        }

                        if (amount > 100000) {
                            Swal.fire({
                                icon: 'error',
                                title: 'Limit Exceeded',
                                text: 'Amount exceeds maximum limit of ₹1,00,000'
                            });
                            return;
                        }


                        const response = await fetch('/wallet/create-razorpay-order', {
                            method: 'POST',
                            headers: { 'Content-Type': 'application/json' },
                            body: JSON.stringify({ amount, })
                        });

                        const data = await response.json();
                        if (!data.success) {
                            throw new Error(data.message || 'Failed to create order');
                        }

                        const options = {
                            key: '<%= process.env.RAZORPAY_KEY_ID %>',
                            amount: data.amount,
                            currency: data.currency,
                            order_id: data.orderId,
                            name: 'Diecastro',
                            description: 'Add Money to Wallet',
                            handler: async function (response) {
                                try {
                                 
                                    const verifyResponse = await
                                        fetch('/wallet/verify-payment', {
                                            method: 'POST',
                                            headers: { 'Content-Type': 'application/json' },
                                            body: JSON.stringify({
                                                amount,
                                                razorpay_order_id: response.razorpay_order_id,
                                                razorpay_payment_id: response.razorpay_payment_id,
                                                razorpay_signature: response.razorpay_signature


                                            })
                                        })
                                         
                                    const result = await verifyResponse.json();
                                    if (result.success) {
                                        document.getElementById('currentBalance').innerText = `₹${result.newBalance.toFixed(2)}`;
                                        amountInput.value = '';

                                        Swal.fire({
                                            icon: 'success',
                                            title: 'Success',
                                            text: 'Money added successfully!',
                                            timer: 1500
                                        }).then(() => location.reload());
                                    } else {
                                        throw new Error(result.message || 'Payment verification failed');
                                    }
                                } catch (error) {
                                    Swal.fire({
                                        icon: 'error',
                                        title: 'Error',
                                        text: error.message || 'Payment processing failed'
                                    });
                                }
                            },

                            theme: { color: '#333333' },
                            modal: {
                                ondismiss: function () {
                                    Swal.fire({
                                        icon: 'info',
                                        title: 'Cancelled',
                                        text: 'Payment cancelled',
                                        timer: 1500
                                    });
                                }
                            }
                        };

                        const rzp = new Razorpay(options);
                        rzp.open();

                    } catch (error) {
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: error.message || 'Failed to initiate payment'
                        });
                    }
                }

                document.addEventListener('DOMContentLoaded', () => {
                    // Removed mobile sidebar toggle as navbar is now horizontal
                });

                function confirmAdminLogout(event) {
                    event.preventDefault();
                    Swal.fire({
                        title: "Are you sure?",
                        text: "You will be logged out!",
                        icon: "warning",
                        showCancelButton: true,
                        confirmButtonColor: "#3085d6",
                        cancelButtonColor: "#d33",
                        confirmButtonText: "Yes, Logout"
                    }).then((result) => {
                        if (result.isConfirmed) {
                            window.location.href = "/logout";
                        }
                    });
                }
            </script>
    </body>