<%- include("../../views/partials/user/header") %>

<style>
    #country {
        height: calc(2.25rem + 2px) !important;
        padding-top: 5px !important;
    }
</style>

<section class="banner-area organic-breadcrumb">
    <div class="container">
        <div class="breadcrumb-banner d-flex flex-wrap align-items-center justify-content-end">
            <div class="col-first">
                <h1>Shopping Cart</h1>
                <nav class="d-flex align-items-center">
                    <a href="/">Home<span class="lnr lnr-arrow-right"></span></a>
                    <a href="/userProfile">Profile<span class="lnr lnr-arrow-right"></span></a>
                    <a href="/address">Address<span class="lnr lnr-arrow-right"></span></a>
                    <a href="/addAddress">Add Address</a>
                </nav>
            </div>
        </div>
    </div>
</section>

<div class="container mt-4">
    <h3 class="mt-3" style="color: #046963; margin-bottom:70px">Create User Address</h3>
    <form id="addressForm" method="POST" action="/addAddressCheckout" class="border-0 p-3">
        <div class="row mb-50">
            <div class="form-group col-md-4">
                <label for="addressType">Address Type:</label>
                <input type="text" class="form-control border-3" id="addressType" name="addressType" required>
            </div>
            <div class="form-group col-md-4">
                <label for="name">Name:</label>
                <input type="text" class="form-control border-3" id="name" name="name" required>
            </div>
            <div class="form-group col-md-4">
                <label for="country">Country:</label>
                <select  style="padding-bottom: 44px;"  class="form-control border-3" id="country" name="country" required>
                    <option value="India">India</option>
                </select>
            </div>
        </div>
        <div class="row mb-3">
            <div class="form-group col-md-4">
                <label for="city">City:</label>
                <input type="text" class="form-control border-3" id="city" name="city" required>
            </div>
            <div class="form-group col-md-4">
                <label for="landMark">Landmark:</label>
                <input type="text" class="form-control border-3" id="landMark" name="landMark" required>
            </div>
            <div class="form-group col-md-4">
                <label for="state">State:</label>
                <select class="form-control border-3" id="state" name="state" required>
                    <option value="Kerala">Kerala</option>
                </select>
            </div>
        </div>
        <div class="row mb-3">
            <div class="form-group col-md-4">
                <label for="streetAddress">Street Address:</label>
                <input type="text" class="form-control border-3" id="streetAddress" name="streetAddress" required>
            </div>
            <div class="form-group col-md-4">
                <label for="pincode">Pincode:</label>
                <input type="text" class="form-control border-3" id="pincode" name="pincode" required>
            </div>
            <div class="form-group col-md-4">
                <label for="phone">Phone:</label>
                <input type="text" class="form-control border-3" id="phone" name="phone" required>
            </div>
        </div>
        <div class="row mb-3">
            <div class="form-group col-md-4">
                <label for="email">Email:</label>
                <input type="email" class="form-control border-3" id="email" name="email" required>
            </div>
            <div class="form-group col-md-4">
                <label for="altPhone">Alternate Phone:</label>
                <input type="text" class="form-control border-3" id="altPhone" name="altPhone" required>
            </div>
        </div>
        <button type="submit" id="submitButton" class="btn btn-primary">Submit</button>
    </form>
</div>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
    document.getElementById('addressForm').addEventListener('submit', function (event) {
        if (!validateForm()) {
            event.preventDefault();
        }
    });

    function validateForm() {
        let isValid = true;

        // Clear old errors
        document.querySelectorAll(".text-danger").forEach(el => el.remove());

        const fields = ["addressType", "name", "country", "city", "landMark", "state", "streetAddress", "pincode", "phone", "email", "altPhone"];
        fields.forEach(field => {
            const input = document.getElementById(field);
            if (input.value.trim() === "") {
                const error = document.createElement('div');
                error.className = "text-danger";
                error.textContent = "This field is required.";
                input.parentNode.appendChild(error);
                isValid = false;
            }
        });

        const namePattern = /^[A-Za-z\s]+$/;
        const phonePattern = /^\d{10}$/;
        const pincodePattern = /^\d{6}$/;
        const emailPattern = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;

        const name = document.getElementById("name").value.trim();
        const city = document.getElementById("city").value.trim();
        const landMark = document.getElementById("landMark").value.trim();
        const state = document.getElementById("state").value.trim();
        const pincode = document.getElementById("pincode").value.trim();
        const phone = document.getElementById("phone").value.trim();
        const altPhone = document.getElementById("altPhone").value.trim();
        const email = document.getElementById("email").value.trim();

        if (!namePattern.test(name)) {
            Swal.fire("Invalid Name", "Name should only contain letters.", "error");
            isValid = false;
        }

        if (!namePattern.test(city)) {
            Swal.fire("Invalid City", "City should only contain letters.", "error");
            isValid = false;
        }

        if (!namePattern.test(landMark)) {
            Swal.fire("Invalid Landmark", "Landmark should only contain letters.", "error");
            isValid = false;
        }

        if (!namePattern.test(state)) {
            Swal.fire("Invalid State", "State should only contain letters.", "error");
            isValid = false;
        }

        if (!pincodePattern.test(pincode)) {
            Swal.fire("Invalid Pincode", "Pincode must be a 6-digit number.", "error");
            isValid = false;
        }

        if (!phonePattern.test(phone)) {
            Swal.fire("Invalid Phone", "Phone number must be a 10-digit number.", "error");
            isValid = false;
        }

        if (!phonePattern.test(altPhone)) {
            Swal.fire("Invalid Alternate Phone", "Alternate phone must be a 10-digit number.", "error");
            isValid = false;
        }

        if (phone === altPhone) {
            Swal.fire("Duplicate Numbers", "Phone and alternate phone cannot be the same.", "error");
            isValid = false;
        }

        if (!emailPattern.test(email)) {
            Swal.fire("Invalid Email", "Please enter a valid email address.", "error");
            isValid = false;
        }

        return isValid;
    }

    // ðŸ”’ Restrict phone/pincode fields to only numbers
    ["phone", "altPhone"].forEach(id => {
        document.getElementById(id).addEventListener("input", function () {
            this.value = this.value.replace(/\D/g, ""). slice(0, 10)
            
        });
    }); ["pincode"].forEach(id => {
        document.getElementById(id).addEventListener("input", function () {
            this.value = this.value.replace(/\D/g, ""). slice(0, 6)
            
        });
    });
</script>

<%- include("../../views/partials/user/footer") %>
