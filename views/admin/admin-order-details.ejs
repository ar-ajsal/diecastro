<%- include('../partials/admin/header') %>

<style>
    :root {
        --primary-color: #4f46e5; /* Indigo */
        /* --secondary-color: #6b7280; Neutral gray */
        --success-color: #10b981; /* Green */
        --danger-color: #ef4444; /* Red */
        --info-color: #3b82f6; /* Blue */
        --warning-color: #f59e0b; /* Amber */
        --light-gray: #e5e7eb; /* Soft gray */
        --background-color: #f3f4f6; /* Light neutral */
        --white: #ffffff; /* Clean white */
        --shadow: 0 4px 6px rgba(0, 0, 0, 0.05); /* Subtle shadow */
        --transition: all 0.2s ease; /* Smooth transitions */
        --accent-color: #a5b4fc; /* Light indigo */
    }

    body {
        background-color: var(--background-color);
        font-family: 'Inter', sans-serif;
        color: var(--secondary-color);
        min-height: 100vh;
    }

    .container-fluid {
        /* margin-left: 20px; Match sidebar width */
        padding: 2rem;
    }

    h1.mt-4 {
        font-size: 1.75rem;
        font-weight: 600;
        color: var(--secondary-color);
        margin-bottom: 1.5rem;
    }

    .breadcrumb {
        background: var(--white);
        border-radius: 8px;
        padding: 0.75rem;
        box-shadow: var(--shadow);
        margin-bottom: 1.5rem;
    }

    .breadcrumb-item {
        color: var(--secondary-color);
    }

    .breadcrumb-item.active {
        color: var(--primary-color);
    }

    .card {
        background: var(--white);
        border: none;
        border-radius: 12px;
        box-shadow: var(--shadow);
        margin-bottom: 1.5rem;
        transition: var(--transition);
    }

    .card:hover {
        transform: translateY(-3px);
    }

    .card-header {
        background: var(--primary-color);
        color: var(--white);
        border-radius: 12px 12px 0 0;
        padding: 1rem;
        font-weight: 600;
    }

    .card-body {
        padding: 1.5rem;
    }

    .badge {
        padding: 0.5em 1em;
        border-radius: 12px;
        font-weight: 500;
        color: var(--white);
    }

    .bg-success {
        background: var(--success-color);
    }

    .bg-danger {
        background: var(--danger-color);
    }

    .bg-info {
        background: var(--info-color);
    }

    .bg-warning {
        background: var(--warning-color);
    }

    .status-timeline {
        display: flex;
        justify-content: space-between;
        margin: 2rem 0;
        position: relative;
    }

    .status-point {
        display: flex;
        flex-direction: column;
        align-items: center;
        z-index: 1;
    }

    .status-dot {
        width: 16px;
        height: 16px;
        border-radius: 50%;
        margin-bottom: 8px;
        transition: var(--transition);
    }

    .status-dot:hover {
        transform: scale(1.1);
    }

    .status-active {
        background: var(--success-color);
        box-shadow: 0 0 8px rgba(16, 185, 129, 0.3);
    }

    .status-inactive {
        background: var(--light-gray);
    }

    .status-line {
        position: absolute;
        top: 8px;
        left: 0;
        right: 0;
        height: 2px;
        background: var(--light-gray);
        z-index: 0;
    }

    .table {
        width: 100%;
        border-collapse: collapse;
        background: var(--white);
        border-radius: 12px;
        overflow: hidden;
        box-shadow: var(--shadow);
    }

    .table th,
    .table td {
        color: var(--secondary-color);
        border: 1px solid var(--light-gray);
        padding: 12px;
        vertical-align: middle;
    }

    .table th {
        background: var(--primary-color);
        color: var(--white);
        font-weight: 600;
    }

    .table tbody tr:hover {
        background: rgba(165, 180, 252, 0.1);
    }

    .d-flex.align-items-center img {
        border: 1px solid var(--light-gray);
        border-radius: 4px;
        transition: var(--transition);
    }

    .d-flex.align-items-center img:hover {
        transform: scale(1.05);
    }

    .btn {
        border-radius: 8px;
        padding: 0.5rem 1rem;
        font-weight: 600;
        font-family: 'Inter', sans-serif;
        transition: var(--transition);
        color: var(--white);
    }

    .btn:hover {
        transform: translateY(-1px);
        box-shadow: var(--shadow);
    }

    .btn-primary {
        background: var(--primary-color);
        border-color: var(--primary-color);
    }

    .btn-primary:hover {
        background: var(--accent-color);
    }

    .btn-success {
        background: var(--success-color);
        border-color: var(--success-color);
    }

    .btn-success:hover {
        background: #059669;
    }

    .btn-danger {
        background: var(--danger-color);
        border-color: var(--danger-color);
    }

    .btn-danger:hover {
        background: #dc2626;
    }

    .customer-details {
        background: var(--white);
        border-radius: 8px;
        padding: 1.25rem;
        box-shadow: var(--shadow);
        transition: var(--transition);
    }

    .customer-details:hover {
        box-shadow: 0 6px 12px rgba(0, 0, 0, 0.1);
    }

    h5.mb-0,
    h5.mb-3,
    h6 {
        color: var(--secondary-color);
        font-weight: 600;
    }

    .fw-bold {
        color: var(--secondary-color);
    }

    hr {
        border-color: var(--light-gray);
    }

    @media screen and (max-width: 768px) {
        .container-fluid {
            margin-left: 0;
            padding: 1rem;
        }

        .status-timeline {
            flex-direction: column;
            align-items: flex-start;
            gap: 1.5rem;
        }

        .status-point {
            flex-direction: row;
            gap: 8px;
            align-items: center;
        }

        .status-dot {
            margin-bottom: 0;
        }

        .status-line {
            display: none;
        }

        .table {
            display: block;
            overflow-x: auto;
            white-space: nowrap;
        }

        .table th,
        .table td {
            min-width: 100px;
        }
    }
</style>

<div class="container-fluid px-4">
    <h1 class="mt-4">Order Details</h1>
    <ol class="breadcrumb mb-4">
        <li class="breadcrumb-item active">Order #<%= order.orderId %></li>
    </ol>

    <div class="row">
        <div class="col-xl-8">
            <div class="card mb-4">
                <div class="card-header">
                    <div class="d-flex justify-content-between align-items-center">
                        <h5 class="mb-0">Order #<%= order.orderId %></h5>
                        <span class="badge bg-<%= 
                            order.status === 'delivered' ? 'success' :
                            order.status === 'cancelled' ? 'danger' :
                            order.status === 'shipped' ? 'info' :
                            'warning'
                        %>">
                            <%= order.status.toUpperCase() %>
                        </span>
                    </div>
                </div>
                <div class="card-body">
                    <!-- Status Timeline -->
                    <div class="status-timeline">
                        <div class="status-line"></div>
                        <% const statuses = ['pending', 'confirmed', 'shipped', 'delivered']; %>
                        <% statuses.forEach(status => { %>
                            <div class="status-point">
                                <div class="status-dot <%= order.status === status || statuses.indexOf(order.status) > statuses.indexOf(status) ? 'status-active' : 'status-inactive' %>"></div>
                                <small><%= status.toUpperCase() %></small>
                            </div>
                        <% }); %>
                    </div>

                    <!-- Product Details -->
                    <h5 class="mb-3">Product Information</h5>
                    <div class="table-responsive">
                        <table class="table">
                            <thead>
                                <tr>
                                    <th>Product</th>
                                    <th>Price</th>
                                    <th>Quantity</th>
                                    <th>Total</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td>
                                        <div class="d-flex align-items-center">
                                            <img src="/<%= order.orderedItems[0].product.productImage[0] %>" 
                                                 alt="Product"
                                                 style="width: 50px; height: 50px; object-fit: cover;"
                                                 class="me-2">
                                            <span><%= order.orderedItems[0].product.productName %></span>
                                        </div>
                                    </td>
                                    <td>₹<%= order.orderedItems[0].price %></td>
                                    <td><%= order.orderedItems[0].quantity %></td>
                                    <td>₹<%= order.finalAmount %></td>
                                </tr>
                            </tbody>
                        </table>
                    </div>

                    <!-- Order Actions -->
                    <% if (order.status !== 'returned' && order.status !== 'return_denied' && order.status !== 'cancelled' && order.status !== 'delivered' && order.status !== 'return_requested')  { %>
                        <div class="mt-4">
                            <button onclick="updateStatus('<%= order._id %>')" class="btn btn-primary me-2">
                                Update Status
                            </button>
                            <button onclick="cancelOrder('<%= order._id %>')" class="btn btn-danger">
                                Cancel Order
                            </button>
                        </div>
                    <% } %>

                    <% if (order.status == 'return_requested') { %>
                        <div class="mt-4">
                            Return Request:
                            <form action="/admin/ReturnRequestHandle" method="post">
                                <input type="hidden" name="orderId" value="<%= order._id %>">
                                <button type="submit" name="action" value="approve" class="btn btn-success me-2">
                                    Approve
                                </button>
                                <button type="submit" name="action" value="deny" class="btn btn-danger me-2">
                                    Deny
                                </button>
                            </form>
                        </div>
                    <% } %>
                </div>
            </div>
        </div>

        <div class="col-xl-4">
            <!-- Customer Details -->
            <div class="card mb-4">
                <div class="card-header">
                    <h5 class="mb-0">Customer Information</h5>
                </div>
                <div class="card-body">
                    <div class="customer-details">
                        <h6>Shipping Address</h6>
                        <p class="mb-1"><strong><%= order.address.name %></strong></p>
                        <p class="mb-1"><%= order.address.streetAddress %></p>
                        <p class="mb-1"><%= order.address.city %>, <%= order.address.state %></p>
                        <p class="mb-1"><%= order.address.pincode %></p>
                        <p class="mb-1">Phone: <%= order.address.phone %></p>
                        <p class="mb-0">Email: <%= order.address.email %></p>
                    </div>

                    <div class="mt-4">
                        <h6>Order Summary</h6>
                        <div class="d-flex justify-content-between mb-2">
                            <span>Subtotal:</span>
                            <span>₹<%= order.totalPrice %></span>
                        </div>
                        <% if (order.discount > 0) { %>
                            <div class="d-flex justify-content-between mb-2">
                                <span>Discount:</span>
                                <span>-₹<%= order.discount %></span>
                            </div>
                        <% } %>
                        <hr>
                        <div class="d-flex justify-content-between fw-bold">
                            <span>Total:</span>
                            <span>₹<%= order.finalAmount %></span>
                        </div>
                    </div>

                    <div class="mt-4">
                        <h6>Order Information</h6>
                        <p class="mb-1"><strong>Order Date:</strong> <%= new Date(order.createdOn).toLocaleString() %></p>
                        <p class="mb-0"><strong>Order Status:</strong> <%= order.status.toUpperCase() %></p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.all.min.js"></script>
<script>
    async function updateStatus(orderId) {
        const { value: status } = await Swal.fire({
            title: 'Update Order Status',
            input: 'select',
            inputOptions: {
                'pending': 'Pending',
                'confirmed': 'Confirmed',
                'shipped': 'Shipped',
                'delivered': 'Delivered'
            },
            inputPlaceholder: 'Select status',
            showCancelButton: true,
            confirmButtonColor: '#10b981',
            cancelButtonColor: '#3b82f6',
            inputValidator: (value) => {
                if (!value) {
                    return 'You need to select a status!';
                }
            }
        });

        if (status) {
            try {
                const response = await fetch('/admin/orders/update-status', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ orderId, status }),
                });

                const data = await response.json();
                
                if (data.success) {
                    await Swal.fire({
                        icon: 'success',
                        title: 'Success',
                        text: 'Order status updated successfully',
                        timer: 1500,
                        confirmButtonColor: '#10b981'
                    });
                    location.reload();
                } else {
                    throw new Error(data.message);
                }
            } catch (error) {
                console.error('Error:', error);
                await Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: error.message || 'Failed to update status',
                    confirmButtonColor: '#ef4444'
                });
            }
        }
    }

    async function cancelOrder(orderId) {
        const result = await Swal.fire({
            title: 'Cancel Order',
            text: 'Are you sure you want to cancel this order?',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#ef4444',
            cancelButtonColor: '#3b82f6',
            confirmButtonText: 'Yes, cancel it!'
        });

        if (result.isConfirmed) {
            try {
                const response = await fetch('/admin/orders/cancel', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ orderId }),
                });

                const data = await response.json();
                
                if (data.success) {
                    await Swal.fire({
                        icon: 'success',
                        title: 'Success',
                        text: 'Order cancelled successfully',
                        timer: 1500,
                        confirmButtonColor: '#10b981'
                    });
                    location.reload();
                } else {
                    throw new Error(data.message);
                }
            } catch (error) {
                console.error('Error:', error);
                await Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: error.message || 'Failed to cancel order',
                    confirmButtonColor: '#ef4444'
                });
            }
        }
    }
</script>

<%- include('../partials/admin/footer') %>